{"version":3,"sources":["modules/socket-clint.js","components/ChatSection.js","components/OnlineUsersSection.js","components/WhiteBoard.js","components/Login.js","components/Room.js","App.js","index.js"],"names":["socket","socketIOClient","ChatSection","setMessages","setMessage","message","messages","name","useParams","messagesEndRef","useRef","useEffect","on","off","current","scrollIntoView","behavior","MainDiv","ChatDiv","map","m","i","user","FirstDiv","UserMsg","MessageP","text","AdminDiv","AdminMessage","SecondDiv","OthersMsg","UserNameP","ref","Form","onSubmit","e","preventDefault","emit","Input","type","value","required","onChange","target","placeholder","styled","div","p","form","input","OnlineUsersSection","users","Ul","u","Li","style","color","Span","toUpperCase","id","ul","li","span","WhiteBoard","canvasRef","useState","setColor","lineSize","setLineSize","openChat","setOpenChat","openOnlineUsers","setOpenOnlineUsers","setUsers","roomName","navigate","useNavigate","canvas","document","querySelector","ctx","getContext","sketch","getComputedStyle","width","window","innerWidth","height","innerHeight","mouse","x","y","last_mouse","addEventListener","pageX","offsetLeft","pageY","offsetTop","touch","touches","lineJoin","lineCap","onPaint","removeEventListener","root","beginPath","moveTo","lineTo","closePath","stroke","undefined","timeout","clearTimeout","setTimeout","data","toDataURL","room","image","Image","context","onload","drawImage","src","strokeStyle","lineWidth","length","StyledLeaveButton","variant","onClick","ColorsDiv","className","StyledEraser","SizeDiv","FlexDiv","IconDiv","UsersIconDiv","Button","FaEraser","Login","setName","error","setError","Wrapper","H1","Label","P","StyledButton","h1","label","Room","setRoomName","roomList","setRoomList","rooms","InputGroup","FormControl","aria-label","aria-describedby","Append","handleJoinRoom","StyledAlert","Alert","App","removeAllListeners","disconnect","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6fdbd1dc.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\n\n// const endpoint = \"http://localhost:8000/\";\nconst endpoint = \"https://a-digital-whiteboard.herokuapp.com/\";\n\nconst socket = socketIOClient(endpoint);\n\nexport default socket;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { useParams } from \"react-router-dom\";\nimport socket from \"../modules/socket-clint\";\n\nconst ChatSection = ({ setMessages, setMessage, message, messages }) => {\n    const { name } = useParams();\n    const messagesEndRef = useRef(null);\n\n    //get messages\n    useEffect(() => {\n        socket.on(\"message\", (message) => {\n            setMessages([...messages, message]);\n        });\n        return () => {\n            socket.off(\"message\");\n        };\n    }, [messages, setMessages]);\n\n    // send the message by socket io\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n\n        if (message) {\n            socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n        }\n    };\n\n    // scroll to the bottom for every new message\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    //check when a message comes and scroll it it's needed\n    useEffect(scrollToBottom, [messages]);\n\n    return (\n        <MainDiv>\n            <ChatDiv>\n                {messages?.map((m, i) => {\n                    if (m.user === name) {\n                        return (\n                            <FirstDiv key={i}>\n                                <FaUserAlt />\n                                <UserMsg>\n                                    <MessageP>{m.text}</MessageP>\n                                </UserMsg>\n                            </FirstDiv>\n                        );\n                    } else if (m.user === \"admin\") {\n                        return (\n                            <AdminDiv key={i}>\n                                <AdminMessage>\n                                    <MessageP>{m.text}</MessageP>\n                                </AdminMessage>\n                            </AdminDiv>\n                        );\n                    } else {\n                        return (\n                            <SecondDiv key={i}>\n                                <OthersMsg>\n                                    <UserNameP>{m.user}:</UserNameP>\n                                    <MessageP>{m.text}</MessageP>\n                                </OthersMsg>\n                                <FaUserAlt />\n                            </SecondDiv>\n                        );\n                    }\n                })}\n                <div ref={messagesEndRef} />\n            </ChatDiv>\n            <Form onSubmit={handleOnSubmit}>\n                <Input\n                    type='text'\n                    value={message ? message : \"\"}\n                    required\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder='Write some thing...'\n                />\n            </Form>\n        </MainDiv>\n    );\n};\n\nexport default ChatSection;\n\nconst MainDiv = styled.div`\n    position: absolute;\n    height: 23rem;\n    width: 16rem;\n    bottom: 16%;\n    border: 1px solid black;\n    border-radius: 0.5rem;\n    display: flex;\n    flex-direction: column;\n    padding-top: 1rem;\n    padding-bottom: 0.3rem;\n    margin-left: 1rem;\n    justify-content: space-between;\n    background-color: #ececec;\n`;\n\nconst FirstDiv = styled.div`\n    align-self: flex-start;\n    display: flex;\n    align-items: center;\n    margin-left: 0.2rem;\n    margin-bottom: 0.4rem;\n`;\n\nconst SecondDiv = styled.div`\n    align-self: flex-start;\n    display: flex;\n    align-items: center;\n    margin-right: 0.2rem;\n    margin-bottom: 0.4rem;\n    justify-content: flex-end;\n`;\n\nconst UserNameP = styled.p`\n    margin: 0;\n    margin-left: 0.5rem;\n    font-size: 0.7rem;\n    text-align: left;\n    overflow-wrap: break-word;\n`;\nconst MessageP = styled.p`\n    margin: 0;\n    margin-left: 0.5rem;\n    text-align: left;\n    overflow-wrap: break-word;\n`;\n\nconst UserMsg = styled.div`\n    width: 80%;\n    background-color: #5555ff;\n    border-radius: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: self-end;\n    padding: 0.2rem;\n    padding-left: 0.5rem;\n    color: #fff;\n    margin-left: 0.5rem;\n`;\n\nconst OthersMsg = styled.div`\n    width: 80%;\n    background-color: #d2d2d2;\n    border-radius: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: self-end;\n    padding: 0.2rem;\n    padding-right: 0.5rem;\n    margin-right: 0.5rem;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n    width: 96%;\n    padding: 0.3rem;\n    border-radius: 0.3rem;\n    border: none;\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ChatDiv = styled.div`\n    height: 90%;\n    overflow: scroll;\n`;\n\nconst AdminDiv = styled.div`\n    width: 90%;\n    background-color: #d1ecf1;\n    border-radius: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: self-end;\n    padding: 0.2rem;\n    padding-left: 0.5rem;\n    margin-left: 0.5rem;\n    font-size: 0.6rem;\n    margin-bottom: 0.5rem;\n`;\n\nconst AdminMessage = styled.div`\n    border-radius: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: self-end;\n    padding: 0.2rem;\n    padding-left: 0.5rem;\n    margin-left: 0.5rem;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaUserAlt } from \"react-icons/fa\";\n\nconst OnlineUsersSection = ({ users }) => {\n    return (\n        <MainDiv>\n            <Ul>\n                {users.users?.map((u) => {\n                    return (\n                        <Li key={u.id}>\n                            <FaUserAlt style={{ color: \"green\" }} />\n                            <Span> {u.name.toUpperCase()}</Span>\n                        </Li>\n                    );\n                })}\n            </Ul>\n        </MainDiv>\n    );\n};\n\nexport default OnlineUsersSection;\n\nconst MainDiv = styled.div`\n    position: absolute;\n    height: 23rem;\n    width: 16rem;\n    bottom: 16%;\n    border: 1px solid black;\n    border-radius: 0.5rem;\n    padding-top: 1rem;\n    padding-bottom: 0.3rem;\n    margin-left: 1rem;\n    background-color: #ececec;\n`;\n\nconst Ul = styled.ul`\n    list-style: none;\n    padding-left: 0.8rem;\n`;\n\nconst Li = styled.li`\n    text-align: left;\n    margin-bottom: 0.5rem;\n`;\n\nconst Span = styled.span`\n    margin-left: 1rem;\n`;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FaComments, FaUsers, FaEraser } from \"react-icons/fa\";\nimport ChatSection from \"./ChatSection\";\nimport socket from \"../modules/socket-clint\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport OnlineUsersSection from \"./OnlineUsersSection\";\n\nconst WhiteBoard = () => {\n    const canvasRef = useRef();\n    const [color, setColor] = useState(\"black\");\n    const [lineSize, setLineSize] = useState(1);\n    const [openChat, setOpenChat] = useState(false);\n    const [openOnlineUsers, setOpenOnlineUsers] = useState(false);\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [users, setUsers] = useState([]);\n    const { roomName, name } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const canvas = document.querySelector(\"#board\");\n        //if the element is undefined return;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        const sketch = document.querySelector(\"#sketch\");\n        const sketch_style = getComputedStyle(sketch);\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        const mouse = { x: 0, y: 0 };\n        const last_mouse = { x: 0, y: 0 };\n\n        //mouse moving event\n        canvas.addEventListener(\n            \"mousemove\",\n            function (e) {\n                last_mouse.x = mouse.x;\n                last_mouse.y = mouse.y;\n                mouse.x = e.pageX - canvas.offsetLeft;\n                mouse.y = e.pageY - canvas.offsetTop;\n            },\n            false\n        );\n\n        // touch moving event for ipad and phones\n        canvas.addEventListener(\n            \"touchmove\",\n            function (e) {\n                const touch = e.touches[0];\n                last_mouse.x = mouse.x;\n                last_mouse.y = mouse.y;\n                mouse.x = touch.pageX;\n                mouse.y = touch.pageY;\n            },\n            false\n        );\n\n        // Drawing on Paint App\n        ctx.lineJoin = \"round\";\n        ctx.lineCap = \"round\";\n\n        // mouse and touch start and stop event\n        canvas.addEventListener(\n            \"mousedown\",\n            function (e) {\n                canvas.addEventListener(\"mousemove\", onPaint, false);\n            },\n            false\n        );\n\n        canvas.addEventListener(\n            \"mouseup\",\n            function () {\n                canvas.removeEventListener(\"mousemove\", onPaint, false);\n            },\n            false\n        );\n\n        canvas.addEventListener(\n            \"touchstart\",\n            function () {\n                canvas.addEventListener(\"touchmove\", onPaint, false);\n            },\n            false\n        );\n\n        canvas.addEventListener(\n            \"touchend\",\n            function () {\n                canvas.removeEventListener(\"touchmove\", onPaint, false);\n            },\n            false\n        );\n\n        let root = {};\n        //painting function\n        const onPaint = function (e) {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n            if (root.timeout !== undefined) clearTimeout(root.timeout);\n            //send canvas data every 1 second\n            root.timeout = setTimeout(function () {\n                const data = canvas.toDataURL(\"image/png\");\n                socket.emit(\"canvas-data\", { data, room: roomName });\n            }, 1000);\n        };\n    }, [roomName]);\n\n    useEffect(() => {\n        // get the canvas data for the new users if it exist\n        socket.emit(\"get-existing-data\", { room: roomName }, (data) => {\n            if (!data) return;\n            let image = new Image();\n            const canvas = document.querySelector(\"#board\");\n            const context = canvas.getContext(\"2d\");\n            image.onload = () => {\n                context.drawImage(image, 0, 0);\n            };\n            image.src = data.data;\n        });\n    }, [roomName]);\n\n    useEffect(() => {\n        //change the line color\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.strokeStyle = color;\n    }, [color]);\n\n    useEffect(() => {\n        //change the line size\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.lineWidth = lineSize;\n    }, [lineSize]);\n\n    useEffect(() => {\n        //get the messages\n        socket.on(\"message\", (message) => {\n            setMessages([...messages, message]);\n        });\n    }, [messages]);\n\n    useEffect(() => {\n        //send canvas data to the other users in the room\n        socket.on(\"canvas-data\", (data) => {\n            let image = new Image();\n            const canvas = document.querySelector(\"#board\");\n            const context = canvas.getContext(\"2d\");\n            image.onload = () => {\n                context.drawImage(image, 0, 0);\n            };\n            image.src = data;\n        });\n    }, []);\n\n    useEffect(() => {\n        // clean up all sockets, get the rooms again and delete the room and the its data if it's empty\n        return () => {\n            socket.emit(\"leave-room\", { room: roomName });\n            socket.emit(\"getUsers\", { room: roomName }, (data) => {\n                if (!data.users.length > 0) {\n                    socket.emit(\"delete-room\", { room: roomName });\n                }\n            });\n            socket.off(\"canvas-data\");\n            socket.off(\"updated-waiting-list\");\n            socket.off(\"message\");\n            socket.off(\"canvas-data\");\n        };\n    }, [roomName]);\n\n    //change color\n    const handleChangeColor = (e) => {\n        setColor(e.target.value);\n    };\n\n    //change size\n    const handleOnChange = (e) => {\n        setLineSize(e.target.value);\n    };\n\n    //open the chat and close the user section\n    const handleOpenChat = () => {\n        setOpenChat(!openChat);\n        setOpenOnlineUsers(false);\n    };\n\n    //leave the room\n    const handleOnLeave = () => {\n        navigate(`/room/${name}`);\n    };\n\n    // open the user section, get users and close the chat section\n    const handleOnlineUsers = () => {\n        setOpenOnlineUsers(!openOnlineUsers);\n        setOpenChat(false);\n        socket.emit(\"getUsers\", { room: roomName }, (data) => {\n            setUsers(data);\n        });\n    };\n\n    return (\n        <MainDiv>\n            <StyledLeaveButton variant='danger' onClick={handleOnLeave}>\n                Leave\n            </StyledLeaveButton>\n            <ColorsDiv className='colors'>\n                <StyledEraser\n                    onClick={() => {\n                        setColor(\"#fff\");\n                    }}\n                />\n                <input type='color' onChange={handleChangeColor} />\n                <SizeDiv>\n                    <select name='size' id='size' onChange={handleOnChange}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                        <option value='6'>6</option>\n                        <option value='7'>7</option>\n                        <option value='8'>8</option>\n                    </select>\n                </SizeDiv>\n            </ColorsDiv>\n            <div className='sketch' id='sketch'>\n                <canvas ref={canvasRef} id='board' />\n            </div>\n            {openChat && (\n                <ChatSection\n                    setMessages={setMessages}\n                    setMessage={setMessage}\n                    message={message}\n                    messages={messages}\n                />\n            )}\n\n            {openOnlineUsers && <OnlineUsersSection users={users} />}\n            <FlexDiv>\n                <IconDiv onClick={handleOpenChat}>\n                    <FaComments style={{ width: \"2.5rem\", height: \"2.5rem\" }} />\n                </IconDiv>\n                <UsersIconDiv onClick={() => handleOnlineUsers()}>\n                    <FaUsers style={{ width: \"2.5rem\", height: \"2.5rem\" }} />\n                </UsersIconDiv>\n            </FlexDiv>\n        </MainDiv>\n    );\n};\n\nexport default WhiteBoard;\n\nconst MainDiv = styled.div`\n    position: relative;\n    cursor: crosshair;\n`;\n\nconst ColorsDiv = styled.div`\n    padding: 0.5rem 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30%;\n    /* background-color: #e8e8e8; */\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    /* border: 1px solid #696969;\n    border-top: none;\n    border-radius: 0 0 0.6rem 0.6rem; */\n    height: 2.5rem;\n    margin-top: 0.5rem;\n`;\n\nconst SizeDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-left: 0.5rem;\n`;\n\nconst IconDiv = styled.div``;\n\nconst UsersIconDiv = styled.div`\n    margin-left: 1rem;\n`;\n\nconst FlexDiv = styled.div`\n    display: flex;\n    position: absolute;\n    bottom: 8%;\n    left: 1rem;\n    cursor: pointer;\n`;\n\nconst StyledLeaveButton = styled(Button)`\n    position: absolute;\n    right: 1%;\n    top: 1.2%;\n`;\n\nconst StyledEraser = styled(FaEraser)`\n    cursor: pointer;\n    width: 3rem;\n    height: 3rem;\n    margin-right: 0.5rem;\n    @media (min-width: 768px) {\n        width: 2.5rem;\n        height: 2.5rem;\n    }\n    @media (min-width: 992px) {\n        width: 2rem;\n        height: 2rem;\n    }\n`;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport socket from \"../modules/socket-clint\";\n\nconst Login = () => {\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    const handleOnChange = (e) => {\n        setError(null);\n        setName(e.target.value);\n    };\n\n    // login and save user\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if (!name) {\n            setError(\"Write your name to continue\");\n            return;\n        }\n        socket.emit(\"user-name\", { name });\n        navigate(`/room/${name}`);\n    };\n\n    return (\n        <Wrapper>\n            <H1>Digital whiteboard</H1>\n            <Form onSubmit={handleOnSubmit}>\n                <Label> Write your name here</Label>\n                <Input type='text' onChange={handleOnChange} />\n                {error && <P>{error}</P>}\n                <StyledButton variant='primary' type='submit'>\n                    Submit\n                </StyledButton>\n            </Form>\n        </Wrapper>\n    );\n};\n\nexport default Login;\n\nconst P = styled.p`\n    width: 50%;\n    margin: 0 auto;\n    text-align: center;\n    background-color: #fff3cd;\n    border-color: #ffeeba;\n    color: #856404;\n`;\n\nconst H1 = styled.h1`\n    color: #fff;\n    text-align: center;\n    padding-top: 3rem;\n`;\n\nconst Label = styled.label`\n    color: #fff;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    width: 100%;\n    background-color: #333;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 50%;\n    margin: 0 auto;\n    align-self: center;\n    margin-top: 8rem;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst StyledButton = styled(Button)`\n    margin-top: 1rem;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { InputGroup, Button, FormControl, Alert } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport socket from \"../modules/socket-clint\";\n\nconst Room = () => {\n    const [roomName, setRoomName] = useState(\"\");\n    const [roomList, setRoomList] = useState([]);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n    const { name } = useParams();\n\n    const handleOnChange = (e) => {\n        setError(null);\n        setRoomName(e.target.value);\n    };\n\n    // get rooms list\n    useEffect(() => {\n        socket.on(\"roomList\", (data) => {\n            setRoomList(data.rooms);\n        });\n\n        return () => {\n            socket.off(\"roomList\");\n        };\n    }, [roomList]);\n\n    // update rooms when some one create a new room\n    useEffect(() => {\n        socket.on(\"updated-rooms\", (data) => {\n            setRoomList(data.rooms);\n        });\n\n        return () => {\n            socket.emit(\"disconnect\");\n            socket.off(\"updated-rooms\");\n        };\n    }, [roomList]);\n\n    // create a room and join it\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if (!roomName) {\n            setError(\"Chose a room name to continue\");\n            return;\n        }\n        socket.emit(\"join\", { name, roomName }, (data) => {\n            // setRoomList(data);\n            // console.log(data);\n        });\n\n        navigate(`/whiteboard/${name}/${roomName}`);\n    };\n\n    // join a specific room\n    const handleJoinRoom = (e, roomName) => {\n        socket.emit(\"join\", { name, roomName }, (data) => {\n            // setRoomList(data);\n            // console.log(\"join\", data);\n        });\n        navigate(`/whiteboard/${name}/${roomName}`);\n    };\n\n    return (\n        <Wrapper>\n            <H1>Rooms</H1>\n            <Form onSubmit={handleOnSubmit}>\n                <InputGroup className='mb-3'>\n                    <FormControl\n                        placeholder='create a new room'\n                        aria-label='create a new room'\n                        aria-describedby='basic-addon2'\n                        onChange={handleOnChange}\n                        required\n                    />\n                    <InputGroup.Append>\n                        <Button variant='outline-primary' type='submit'>\n                            Create\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                {error && <P>{error}</P>}\n            </Form>\n            {roomList.length > 0 ? (\n                <Ul>\n                    {roomList.map((room, i) => {\n                        return (\n                            <Li key={i}>\n                                <span>{room.name}</span>\n                                <Button\n                                    variant='success'\n                                    onClick={(e) =>\n                                        handleJoinRoom(e, room.name)\n                                    }\n                                >\n                                    Join\n                                </Button>\n                            </Li>\n                        );\n                    })}\n                </Ul>\n            ) : (\n                <StyledAlert variant='info'>\n                    There are no rooms yet!\n                </StyledAlert>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default Room;\n\nconst P = styled.p`\n    width: 50%;\n    margin: 0 auto;\n    text-align: center;\n    background-color: #fff3cd;\n    border-color: #ffeeba;\n    color: #856404;\n`;\n\nconst H1 = styled.h1`\n    color: #fff;\n    text-align: center;\n    padding-top: 3rem;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    width: 100%;\n    background-color: #333;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    margin: 0 auto;\n    align-self: center;\n    @media (min-width: 800px) {\n        width: 50%;\n    }\n`;\n\nconst Ul = styled.ul`\n    list-style: none;\n    margin: 0 auto;\n    margin-top: 3rem;\n    color: #fff;\n    padding-left: 0;\n    width: 70%;\n`;\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5rem;\n    border-bottom: 1px solid;\n    align-items: center;\n`;\n\nconst StyledAlert = styled(Alert)`\n    margin: 0 auto;\n    @media (min-width: 800px) {\n        width: 30%;\n    }\n`;\n\n// const Input = styled.input`\n//     width: 100%;\n//     &:focus {\n//         outline: none;\n//     }\n// `;\n\n// const Button = styled.button`\n//     margin-top: 1rem;\n//     border-radius: 0.25rem;\n//     color: #fff;\n//     background-color: #007bff;\n//     border: 1px solid #007bff;\n//     padding: 0.4rem;\n//     &:hover {\n//         background-color: #0069d9;\n//         border-color: #0062cc;\n//     }\n// `;\n","import { useEffect } from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport WhiteBoard from \"./components/WhiteBoard\";\nimport Login from \"./components/Login\";\nimport Room from \"./components/Room\";\nimport socket from \"./modules/socket-clint\";\n\nfunction App() {\n    useEffect(() => {\n        socket.on(\"connection\", (data) => {});\n\n        return () => {\n            socket.removeAllListeners();\n            socket.disconnect();\n            socket.off();\n        };\n    }, []);\n\n    return (\n        <Router>\n            <div className='App'>\n                <Routes>\n                    <Route path='/'>\n                        <Login />\n                    </Route>\n                    <Route path='/room/:name'>\n                        <Room />\n                    </Route>\n                    <Route path='/Whiteboard/:name/:roomName'>\n                        <WhiteBoard />\n                    </Route>\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}