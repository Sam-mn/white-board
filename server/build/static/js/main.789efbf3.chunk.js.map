{"version":3,"sources":["modules/socket-clint.js","components/ChatSection.js","components/OnlineUsersSection.js","components/WhiteBoard.js","components/Login.js","components/Room.js","App.js","index.js"],"names":["socket","socketIOClient","ChatSection","setMessages","setMessage","message","messages","name","useParams","messagesEndRef","useRef","useEffect","on","off","current","scrollIntoView","behavior","MainDiv","ChatDiv","map","m","i","user","FirstDiv","UserMsg","UserP","text","SecondDiv","OthersMsg","OtherP","ref","Form","onSubmit","e","preventDefault","emit","Input","type","value","required","onChange","target","placeholder","styled","div","p","form","input","OnlineUsersSection","users","console","log","Ul","u","Li","style","color","Span","toUpperCase","id","ul","li","span","WhiteBoard","canvasRef","useState","setColor","lineSize","setLineSize","openChat","setOpenChat","openOnlineUsers","setOpenOnlineUsers","setUsers","roomName","navigate","useNavigate","canvas","document","querySelector","ctx","getContext","sketch","sketch_style","getComputedStyle","width","parseInt","getPropertyValue","height","mouse","x","y","last_mouse","addEventListener","pageX","this","offsetLeft","pageY","offsetTop","lineWidth","lineJoin","lineCap","strokeStyle","onPaint","removeEventListener","root","beginPath","moveTo","lineTo","closePath","stroke","undefined","timeout","clearTimeout","setTimeout","data","toDataURL","room","image","Image","context","onload","drawImage","src","length","StyledLeaveButton","variant","onClick","ColorsDiv","className","SizeDiv","FlexDiv","IconDiv","UsersIconDiv","Button","Login","setName","error","setError","Wrapper","H1","Label","P","StyledButton","h1","label","Room","setRoomName","roomList","setRoomList","rooms","InputGroup","FormControl","aria-label","aria-describedby","Append","handleJoinRoom","App","removeAllListeners","disconnect","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.789efbf3.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\n\nconst endpoint = \"http://localhost:8000/\";\n\nconst socket = socketIOClient(endpoint);\n\nexport default socket;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { useParams } from \"react-router-dom\";\nimport socket from \"../modules/socket-clint\";\n\nconst ChatSection = ({ setMessages, setMessage, message, messages }) => {\n    const { name } = useParams();\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        socket.on(\"message\", (message) => {\n            setMessages([...messages, message]);\n        });\n        return () => {\n            socket.off(\"message\");\n        };\n    }, [messages, setMessages]);\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n\n        if (message) {\n            socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n        }\n    };\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n    return (\n        <MainDiv>\n            <ChatDiv>\n                {messages?.map((m, i) => {\n                    if (m.user === name) {\n                        return (\n                            <FirstDiv key={i}>\n                                <FaUserAlt />\n                                <UserMsg>\n                                    <UserP>{m.user}</UserP>\n                                    <UserP>{m.text}</UserP>\n                                </UserMsg>\n                            </FirstDiv>\n                        );\n                    } else {\n                        return (\n                            <SecondDiv key={i}>\n                                <FaUserAlt />\n                                <OthersMsg>\n                                    <OtherP>{m.user}</OtherP>\n                                    <OtherP>{m.text}</OtherP>\n                                </OthersMsg>\n                            </SecondDiv>\n                        );\n                    }\n                })}\n                <div ref={messagesEndRef} />\n            </ChatDiv>\n            <Form onSubmit={handleOnSubmit}>\n                <Input\n                    type='text'\n                    value={message ? message : \"\"}\n                    required\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder='Write some thing...'\n                />\n            </Form>\n        </MainDiv>\n    );\n};\n\nexport default ChatSection;\n\nconst MainDiv = styled.div`\n    position: absolute;\n    height: 23rem;\n    width: 16rem;\n    bottom: 6rem;\n    border: 1px solid black;\n    border-radius: 0.5rem;\n    display: flex;\n    flex-direction: column;\n    padding-top: 1rem;\n    padding-bottom: 0.3rem;\n    margin-left: 1rem;\n    justify-content: space-between;\n`;\n\nconst FirstDiv = styled.div`\n    align-self: flex-start;\n    display: flex;\n    align-items: center;\n    margin-left: 0.2rem;\n    margin-bottom: 0.4rem;\n`;\n\nconst SecondDiv = styled.div`\n    align-self: flex-start;\n    display: flex;\n    align-items: center;\n    margin-left: 0.2rem;\n    margin-bottom: 0.4rem;\n`;\n\nconst UserP = styled.p`\n    margin: 0;\n    margin-left: 0.5rem;\n`;\nconst OtherP = styled.p`\n    margin: 0;\n    margin-left: 0.5rem;\n`;\n\nconst UserMsg = styled.div`\n    min-width: 10rem;\n    background-color: #5555ff;\n    border-radius: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: self-end;\n    padding: 0.2rem;\n    padding-left: 0.5rem;\n    color: #fff;\n    margin-left: 0.5rem;\n`;\n\nconst OthersMsg = styled.div`\n    min-width: 10rem;\n    background-color: #d2d2d2;\n    border-radius: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: self-end;\n    padding: 0.2rem;\n    padding-left: 0.5rem;\n    margin-left: 0.5rem;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n    width: 96%;\n    padding: 0.3rem;\n`;\n\nconst ChatDiv = styled.div`\n    height: 90%;\n    overflow: scroll;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaUserAlt } from \"react-icons/fa\";\n\nconst OnlineUsersSection = ({ users }) => {\n    console.log(users.users);\n    return (\n        <MainDiv>\n            <Ul>\n                {users.users?.map((u) => {\n                    console.log(u);\n                    return (\n                        <Li key={u.id}>\n                            <FaUserAlt style={{ color: \"green\" }} />\n                            <Span> {u.name.toUpperCase()}</Span>\n                        </Li>\n                    );\n                })}\n            </Ul>\n        </MainDiv>\n    );\n};\n\nexport default OnlineUsersSection;\n\nconst MainDiv = styled.div`\n    position: absolute;\n    height: 23rem;\n    width: 16rem;\n    bottom: 6rem;\n    border: 1px solid black;\n    border-radius: 0.5rem;\n    padding-top: 1rem;\n    padding-bottom: 0.3rem;\n    margin-left: 1rem;\n`;\n\nconst Ul = styled.ul`\n    list-style: none;\n    padding-left: 0.8rem;\n`;\n\nconst Li = styled.li`\n    text-align: left;\n    margin-bottom: 0.5rem;\n`;\n\nconst Span = styled.span`\n    margin-left: 1rem;\n`;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FaComments, FaUsers } from \"react-icons/fa\";\nimport ChatSection from \"./ChatSection\";\nimport socket from \"../modules/socket-clint\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport OnlineUsersSection from \"./OnlineUsersSection\";\n\nconst WhiteBoard = () => {\n    const canvasRef = useRef();\n    const [color, setColor] = useState(\"black\");\n    const [lineSize, setLineSize] = useState(1);\n    const [openChat, setOpenChat] = useState(false);\n    const [openOnlineUsers, setOpenOnlineUsers] = useState(false);\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [users, setUsers] = useState([]);\n    const { roomName, name } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const canvas = document.querySelector(\"#board\");\n        //if the element is undefined return;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        const sketch = document.querySelector(\"#sketch\");\n        const sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue(\"width\"));\n        canvas.height = parseInt(sketch_style.getPropertyValue(\"height\"));\n        const mouse = { x: 0, y: 0 };\n        const last_mouse = { x: 0, y: 0 };\n        /* Mouse Capturing Work */\n        canvas.addEventListener(\n            \"mousemove\",\n            function (e) {\n                last_mouse.x = mouse.x;\n                last_mouse.y = mouse.y;\n\n                mouse.x = e.pageX - this.offsetLeft;\n                mouse.y = e.pageY - this.offsetTop;\n            },\n            false\n        );\n        /* Drawing on Paint App */\n        ctx.lineWidth = 5;\n        ctx.lineJoin = \"round\";\n        ctx.lineCap = \"round\";\n        ctx.strokeStyle = \"blue\";\n\n        canvas.addEventListener(\n            \"mousedown\",\n            function (e) {\n                canvas.addEventListener(\"mousemove\", onPaint, false);\n            },\n            false\n        );\n\n        canvas.addEventListener(\n            \"mouseup\",\n            function () {\n                canvas.removeEventListener(\"mousemove\", onPaint, false);\n            },\n            false\n        );\n\n        let root = {};\n        const onPaint = function () {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n            if (root.timeout !== undefined) clearTimeout(root.timeout);\n            root.timeout = setTimeout(function () {\n                const data = canvas.toDataURL(\"image/png\");\n\n                socket.emit(\"canvas-data\", { data, room: roomName });\n            }, 1000);\n        };\n    }, [roomName]);\n\n    useEffect(() => {\n        socket.emit(\"get-existing-data\", { room: roomName }, (data) => {\n            console.log(data);\n            if (!data) return;\n            let image = new Image();\n            const canvas = document.querySelector(\"#board\");\n            const context = canvas.getContext(\"2d\");\n            image.onload = () => {\n                context.drawImage(image, 0, 0);\n            };\n            image.src = data.data;\n        });\n    }, [roomName]);\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.strokeStyle = color;\n    }, [color]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.lineWidth = lineSize;\n    }, [lineSize]);\n\n    useEffect(() => {\n        socket.on(\"message\", (message) => {\n            setMessages([...messages, message]);\n        });\n    }, [messages]);\n\n    useEffect(() => {\n        socket.on(\"canvas-data\", (data) => {\n            let image = new Image();\n            const canvas = document.querySelector(\"#board\");\n            const context = canvas.getContext(\"2d\");\n            image.onload = () => {\n                context.drawImage(image, 0, 0);\n            };\n            image.src = data;\n        });\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"updated-waiting-list\", (data) => {\n            console.log(\"Got updated waiting list from server:\", data);\n        });\n    }, []);\n\n    const handleChangeColor = (e) => {\n        setColor(e.target.value);\n    };\n\n    const handleOnChange = (e) => {\n        setLineSize(e.target.value);\n    };\n\n    const handleOpenChat = () => {\n        setOpenChat(!openChat);\n        setOpenOnlineUsers(false);\n    };\n\n    const handleOnLeave = () => {\n        console.log(\"leave\");\n        navigate(`/room/${name}`);\n    };\n\n    const handleOnlineUsers = () => {\n        setOpenOnlineUsers(!openOnlineUsers);\n        setOpenChat(false);\n        socket.emit(\"getUsers\", { room: roomName }, (data) => {\n            setUsers(data);\n        });\n    };\n    useEffect(() => {\n        return () => {\n            socket.emit(\"leave-room\", { room: roomName });\n            socket.emit(\"getUsers\", { room: roomName }, (data) => {\n                console.log(data.users);\n                if (!data.users.length > 0) {\n                    console.log(\"its empty\");\n                    socket.emit(\"delete-room\", { room: roomName });\n                }\n            });\n            socket.off(\"canvas-data\");\n            socket.off(\"updated-waiting-list\");\n            socket.off(\"message\");\n            socket.off(\"canvas-data\");\n        };\n    }, [roomName]);\n    return (\n        <MainDiv>\n            <StyledLeaveButton variant='danger' onClick={handleOnLeave}>\n                Leave\n            </StyledLeaveButton>\n            <ColorsDiv className='colors'>\n                <input type='color' onChange={handleChangeColor} />\n                <SizeDiv>\n                    <select name='size' id='size' onChange={handleOnChange}>\n                        <option value='1'>1</option>\n                        <option value='2'>2</option>\n                        <option value='3'>3</option>\n                        <option value='4'>4</option>\n                        <option value='5'>5</option>\n                        <option value='6'>6</option>\n                    </select>\n                </SizeDiv>\n            </ColorsDiv>\n            <div className='sketch' id='sketch'>\n                <canvas ref={canvasRef} id='board' />\n            </div>\n            {openChat && (\n                <ChatSection\n                    setMessages={setMessages}\n                    setMessage={setMessage}\n                    message={message}\n                    messages={messages}\n                />\n            )}\n\n            {openOnlineUsers && <OnlineUsersSection users={users} />}\n            <FlexDiv>\n                <IconDiv onClick={handleOpenChat}>\n                    <FaComments style={{ width: \"2.5rem\", height: \"2.5rem\" }} />\n                </IconDiv>\n                <UsersIconDiv onClick={() => handleOnlineUsers()}>\n                    <FaUsers style={{ width: \"2.5rem\", height: \"2.5rem\" }} />\n                </UsersIconDiv>\n            </FlexDiv>\n        </MainDiv>\n    );\n};\n\nexport default WhiteBoard;\n\nconst MainDiv = styled.div`\n    position: relative;\n`;\n\nconst ColorsDiv = styled.div`\n    padding: 0.5rem 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 22%;\n    /* background-color: #e8e8e8; */\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    /* border: 1px solid #696969;\n    border-top: none;\n    border-radius: 0 0 0.6rem 0.6rem; */\n    height: 2.5rem;\n`;\n\nconst SizeDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-left: 0.5rem;\n`;\n\nconst IconDiv = styled.div``;\n\nconst UsersIconDiv = styled.div`\n    margin-left: 1rem;\n`;\n\nconst FlexDiv = styled.div`\n    display: flex;\n    position: absolute;\n    bottom: 3rem;\n    left: 1rem;\n    cursor: pointer;\n`;\n\nconst StyledLeaveButton = styled(Button)`\n    position: absolute;\n    right: 1%;\n    top: 1.2%;\n`;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport socket from \"../modules/socket-clint\";\n\nconst Login = () => {\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    const handleOnChange = (e) => {\n        setError(null);\n        setName(e.target.value);\n    };\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"im working\");\n        if (!name) {\n            console.log(\"Write your name to continue\");\n            setError(\"Write your name to continue\");\n            return;\n        }\n        socket.emit(\"user-name\", { name });\n        navigate(`/room/${name}`);\n    };\n\n    return (\n        <Wrapper>\n            <H1>Digital whiteboard</H1>\n            <Form onSubmit={handleOnSubmit}>\n                <Label> Write your name here</Label>\n                <Input type='text' onChange={handleOnChange} />\n                {error && <P>{error}</P>}\n                <StyledButton variant='primary' type='submit'>\n                    Submit\n                </StyledButton>\n            </Form>\n        </Wrapper>\n    );\n};\n\nexport default Login;\n\nconst P = styled.p`\n    width: 50%;\n    margin: 0 auto;\n    text-align: center;\n    background-color: #fff3cd;\n    border-color: #ffeeba;\n    color: #856404;\n`;\n\nconst H1 = styled.h1`\n    color: #fff;\n    text-align: center;\n    padding-top: 3rem;\n`;\n\nconst Label = styled.label`\n    color: #fff;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    width: 100%;\n    background-color: #333;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 50%;\n    margin: 0 auto;\n    align-self: center;\n    margin-top: 8rem;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst StyledButton = styled(Button)`\n    margin-top: 1rem;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { InputGroup, Button, FormControl } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport socket from \"../modules/socket-clint\";\n\nconst Room = () => {\n    const [roomName, setRoomName] = useState(\"\");\n    const [roomList, setRoomList] = useState([]);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n    const { name } = useParams();\n\n    const handleOnChange = (e) => {\n        setError(null);\n        setRoomName(e.target.value);\n    };\n\n    useEffect(() => {\n        socket.on(\"roomList\", (data) => {\n            setRoomList(data.rooms);\n        });\n\n        return () => {\n            socket.off(\"roomList\");\n        };\n    }, [roomList]);\n\n    useEffect(() => {\n        socket.on(\"updated-rooms\", (data) => {\n            setRoomList(data.rooms);\n        });\n\n        return () => {\n            socket.emit(\"disconnect\");\n            socket.off(\"updated-rooms\");\n        };\n    }, [roomList]);\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n\n        if (!roomName) {\n            setError(\"Chose a room name to continue\");\n            return;\n        }\n\n        socket.emit(\"join\", { name, roomName }, (data) => {\n            // setRoomList(data);\n            // console.log(data);\n        });\n\n        navigate(`/whiteboard/${name}/${roomName}`);\n    };\n\n    const handleJoinRoom = (e, roomName) => {\n        socket.emit(\"join\", { name, roomName }, (data) => {\n            // setRoomList(data);\n            // console.log(\"join\", data);\n        });\n        navigate(`/whiteboard/${name}/${roomName}`);\n    };\n\n    return (\n        <Wrapper>\n            <H1>Rooms</H1>\n            <Form onSubmit={handleOnSubmit}>\n                <InputGroup className='mb-3'>\n                    <FormControl\n                        placeholder='create a new room'\n                        aria-label='create a new room'\n                        aria-describedby='basic-addon2'\n                        onChange={handleOnChange}\n                    />\n                    <InputGroup.Append>\n                        <Button variant='outline-primary' type='submit'>\n                            Create\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                {error && <P>{error}</P>}\n            </Form>\n            <Ul>\n                {roomList &&\n                    roomList.map((room, i) => {\n                        return (\n                            <Li key={i}>\n                                <span>{room.name}</span>\n                                <Button\n                                    variant='success'\n                                    onClick={(e) =>\n                                        handleJoinRoom(e, room.name)\n                                    }\n                                >\n                                    Join\n                                </Button>\n                            </Li>\n                        );\n                    })}\n            </Ul>\n        </Wrapper>\n    );\n};\n\nexport default Room;\n\nconst P = styled.p`\n    width: 50%;\n    margin: 0 auto;\n    text-align: center;\n    background-color: #fff3cd;\n    border-color: #ffeeba;\n    color: #856404;\n`;\n\nconst H1 = styled.h1`\n    color: #fff;\n    text-align: center;\n    padding-top: 3rem;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    width: 100%;\n    background-color: #333;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 50%;\n    margin: 0 auto;\n    align-self: center;\n`;\n\nconst Ul = styled.ul`\n    list-style: none;\n    margin: 0 auto;\n    margin-top: 3rem;\n    color: #fff;\n    padding-left: 0;\n    width: 70%;\n`;\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5rem;\n    border-bottom: 1px solid;\n    align-items: center;\n`;\n\n// const Input = styled.input`\n//     width: 100%;\n//     &:focus {\n//         outline: none;\n//     }\n// `;\n\n// const Button = styled.button`\n//     margin-top: 1rem;\n//     border-radius: 0.25rem;\n//     color: #fff;\n//     background-color: #007bff;\n//     border: 1px solid #007bff;\n//     padding: 0.4rem;\n//     &:hover {\n//         background-color: #0069d9;\n//         border-color: #0062cc;\n//     }\n// `;\n","import { useEffect } from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport WhiteBoard from \"./components/WhiteBoard\";\nimport Login from \"./components/Login\";\nimport Room from \"./components/Room\";\nimport socket from \"./modules/socket-clint\";\n\nfunction App() {\n    useEffect(() => {\n        socket.on(\"connection\", (data) => {\n            console.log(\"connected to socket server\" + data);\n        });\n\n        return () => {\n            console.log(\"Will disconnect from socket-server now...\");\n            socket.removeAllListeners();\n            socket.disconnect();\n            socket.off();\n        };\n    }, []);\n\n    return (\n        <Router>\n            <div className='App'>\n                <Routes>\n                    <Route path='/'>\n                        <Login />\n                    </Route>\n                    <Route path='/room/:name'>\n                        <Room />\n                    </Route>\n                    <Route path='/Whiteboard/:name/:roomName'>\n                        <WhiteBoard />\n                    </Route>\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}